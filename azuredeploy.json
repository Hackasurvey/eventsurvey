{
  "$schema": "http://schema.management.azure.com/schemas/2014-04-01-preview/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "siteName": {
      "type": "string"
    },
    "hostingPlanName": {
      "type": "string"
    },
    "siteLocation": {
      "type": "string"
    },
    "sku": {
      "type": "string",
      "allowedValues": [
        "Free",
        "Shared",
        "Basic",
        "Standard"
      ],
      "defaultValue": "Free"
    },
    "workerSize": {
      "type": "string",
      "allowedValues": [
        "0",
        "1",
        "2"
      ],
      "defaultValue": "0"
    },
    "databaseAccountName": {
        "type": "string"
    },
    "location": {
        "type": "string"
    }
  },
  "resources": [
              {
        "apiVersion": "2015-04-08",
        "type": "Microsoft.DocumentDb/databaseAccounts",
        "name": "[parameters('databaseAccountName')]",
        "location": "[parameters('location')]",
        "properties": {
            "name": "[parameters('databaseAccountName')]",
            "databaseAccountOfferType":  "Standard"
        }
    },
    {
      "apiVersion": "2014-04-01",
      "name": "[parameters('hostingPlanName')]",
      "type": "Microsoft.Web/serverFarms",
      "location": "[parameters('siteLocation')]",
      "properties": {
        "name": "[parameters('hostingPlanName')]",
        "sku": "[parameters('sku')]",
        "workerSize": "[parameters('workerSize')]",
        "numberOfWorkers": 1
      }
    },
    {
      "apiVersion": "2014-04-01",
      "name": "[parameters('siteName')]",
      "type": "Microsoft.Web/Sites",
      "location": "[parameters('siteLocation')]",
      "dependsOn": [
        "[concat('Microsoft.Web/serverFarms/', parameters('hostingPlanName'))]"
      ],
      "tags": {
        "[concat('hidden-related:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]": "empty"
      },
      "properties": {
        "name": "[parameters('siteName')]",
        "serverFarm": "[parameters('hostingPlanName')]"
      },
      "resources": [
        {
          "apiVersion": "2014-04-01",
          "type": "config",
          "name": "web",
          "dependsOn": [
            "[concat('Microsoft.Web/Sites/', parameters('siteName'))]",
            "[concat('Microsoft.DocumentDb/databaseAccounts/', parameters('databaseAccountName'))]"
          ],
          "properties": {
            "connectionStrings": [
              {
                "ConnectionString": "[concat(reference(concat('Microsoft.DocumentDb/databaseAccounts/', parameters('databaseAccountName'))).documentEndpoint, '@', listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', parameters('databaseAccountName')), '2014-07-10').primaryMasterKey)]",
                "Name": "DocDBConnection",
                "Type": 3
              }
            ],
            "appSettings":  [
                {
                  "Value":  "[reference(concat('Microsoft.DocumentDb/databaseAccounts/', parameters('databaseAccountName'))).documentEndpoint]",
                  "Name":  "endpoint"
                },
                {
                    "Value":  "[listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', parameters('databaseAccountName')), '2014-07-10').primaryMasterKey]",
                    "Name":  "authKey"
                }
            ]
          }
        },
        {
            "apiVersion": "2014-04-01",
            "name": "MSDeploy",
            "type": "Extensions",
            "dependsOn": [
                "[concat('Microsoft.Web/Sites/', parameters('siteName'))]",
                "[concat('Microsoft.DocumentDb/databaseAccounts/', parameters('databaseAccountName'))]"
            ],
            "properties": {
                "packageUri": "https://portalcontent.blob.core.windows.net/samples/documentdbtodo.zip",
                "dbType": "None",
                "connectionString": "",
                "setParameters": {
                    "IIS Web Application Name": "[parameters('siteName')]"
                }
            }
        }
      ]
    },
        {
            "apiVersion": "2014-04",
            "name": "[concat(parameters('hostingPlanName'), '-', resourceGroup().name)]",
            "type": "microsoft.insights/autoscalesettings",
            "location": "East US",
            "tags": {
                "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]": "Resource"
            },
            "dependsOn": [
	            "[concat('Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]"
	        ],
            "properties": {
                "profiles": [
                  {
                    "name": "Default",
                    "capacity": {
                      "minimum": "1",
                      "maximum": "2",
                      "default": "1"
                    },
                    "rules": [
                      {
                        "metricTrigger": {
                          "metricName": "CpuPercentage",
                          "metricResourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]",
                          "timeGrain": "PT1M",
                          "statistic": "Average",
                          "timeWindow": "PT10M",
                          "timeAggregation": "Average",
                          "operator": "GreaterThan",
                          "threshold": 80.0
                        },
                        "scaleAction": {
                          "direction": "Increase",
                          "type": "ChangeCount",
                          "value": "1",
                          "cooldown": "PT10M"
                        }
                      },
                      {
                        "metricTrigger": {
                          "metricName": "CpuPercentage",
                          "metricResourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]",
                          "timeGrain": "PT1M",
                          "statistic": "Average",
                          "timeWindow": "PT1H",
                          "timeAggregation": "Average",
                          "operator": "LessThan",
                          "threshold": 60.0
                        },
                        "scaleAction": {
                          "direction": "Decrease",
                          "type": "ChangeCount",
                          "value": "1",
                          "cooldown": "PT1H"
                        }
                      }
                    ]
                  }
                ],
                "enabled": false,
                "name": "[concat(parameters('hostingPlanName'), '-', resourceGroup().name)]",
                "targetResourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]"
              }
        },
        {
          "apiVersion": "2014-04",
          "name": "[concat('ServerErrors ', parameters('siteName'))]",
          "type": "microsoft.insights/alertrules",
          "location": "East US",
          "dependsOn": [
	          "[concat('Microsoft.Web/sites/', parameters('siteName'))]"
	      ],
            "tags": {
                "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', parameters('siteName'))]": "Resource"
            },
          "properties": {
            "name": "[concat('ServerErrors ', parameters('siteName'))]",
            "description": "[concat(parameters('siteName'), ' has some server errors, status code 5xx.')]",
            "isEnabled": false,
            "condition": {
              "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.ThresholdRuleCondition",
              "dataSource": {
                "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.RuleMetricDataSource",
                "resourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/sites/', parameters('siteName'))]",
                "metricName": "Http5xx"
              },
              "operator": "GreaterThan",
              "threshold": 0.0,
              "windowSize": "PT5M"
            },
            "action": {
              "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.RuleEmailAction",
              "sendToServiceOwners": true,
              "customEmails": []
            }
          }
        },
        {
            "apiVersion": "2014-04",
            "name": "[concat('ForbiddenRequests ', parameters('siteName'))]",
            "type": "microsoft.insights/alertrules",
            "location": "East US",
            "dependsOn": [
                "[concat('Microsoft.Web/sites/', parameters('siteName'))]"
            ],
            "tags": {
                "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', parameters('siteName'))]": "Resource"
            },
            "properties": {
                "name": "[concat('ForbiddenRequests ', parameters('siteName'))]",
                "description": "[concat(parameters('siteName'), ' has some requests that are forbidden, status code 403.')]",
                "isEnabled": false,
                "condition": {
                    "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.ThresholdRuleCondition",
                    "dataSource": {
                        "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.RuleMetricDataSource",
                        "resourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/sites/', parameters('siteName'))]",
                        "metricName": "Http403"
                    },
                    "operator": "GreaterThan",
                    "threshold": 0,
                    "windowSize": "PT5M"
                },
                "action": {
                    "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.RuleEmailAction",
                    "sendToServiceOwners": true,
                    "customEmails": []
                }
            }
        },
        {
            "apiVersion": "2014-04",
            "name": "[concat('CPUHigh ', parameters('hostingPlanName'))]",
            "type": "microsoft.insights/alertrules",
            "location": "East US",
            "dependsOn": [
                "[concat('Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]"
            ],
            "tags": {
                "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]": "Resource"
            },
            "properties": {
                "name": "[concat('CPUHigh ', parameters('hostingPlanName'))]",
                "description": "[concat('The average CPU is high across all the instances of ', parameters('hostingPlanName'))]",
                "isEnabled": false,
                "condition": {
                    "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.ThresholdRuleCondition",
                    "dataSource": {
                        "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.RuleMetricDataSource",
                        "resourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]",
                        "metricName": "CpuPercentage"
                    },
                    "operator": "GreaterThan",
                    "threshold": 90,
                    "windowSize": "PT15M"
                },
                "action": {
                    "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.RuleEmailAction",
                    "sendToServiceOwners": true,
                    "customEmails": []
                }
            }
        },
        {
            "apiVersion": "2014-04",
            "name": "[concat('LongHttpQueue ', parameters('hostingPlanName'))]",
            "type": "microsoft.insights/alertrules",
            "location": "East US",
            "dependsOn": [
                "[concat('Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]"
            ],
            "tags": {
                "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]": "Resource"
            },
            "properties": {
                "name": "[concat('LongHttpQueue ', parameters('hostingPlanName'))]",
                "description": "[concat('The HTTP queue for the instances of ', parameters('hostingPlanName'), ' has a large number of pending requests.')]",
                "isEnabled": false,
                "condition": {
                    "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.ThresholdRuleCondition",
                    "dataSource": {
                        "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.RuleMetricDataSource",
                        "resourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]",
                        "metricName": "HttpQueueLength"
                    },
                    "operator": "GreaterThan",
                    "threshold": 100.0,
                    "windowSize": "PT5M"
                },
                "action": {
                    "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.RuleEmailAction",
                    "sendToServiceOwners": true,
                    "customEmails": []
                }
            }
        },
        {
            "apiVersion": "2014-04",
            "name": "[parameters('siteName')]",
            "type": "microsoft.insights/components",
            "location": "Central US",
            "dependsOn": [
                "[concat('Microsoft.Web/sites/', parameters('siteName'))]"
            ],
            "tags": {
                "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', parameters('siteName'))]": "Resource"
            },
            "properties": {
                "ApplicationId": "[parameters('siteName')]"
            }
        }
  ]
}
